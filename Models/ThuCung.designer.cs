#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KinhDoanhThuCung.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CHTC")]
	public partial class ThuCungDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertCTHOADONTHUCUNG(CTHOADONTHUCUNG instance);
    partial void UpdateCTHOADONTHUCUNG(CTHOADONTHUCUNG instance);
    partial void DeleteCTHOADONTHUCUNG(CTHOADONTHUCUNG instance);
    partial void InsertGIONG(GIONG instance);
    partial void UpdateGIONG(GIONG instance);
    partial void DeleteGIONG(GIONG instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertLOAI(LOAI instance);
    partial void UpdateLOAI(LOAI instance);
    partial void DeleteLOAI(LOAI instance);
    partial void InsertNCCGIONG(NCCGIONG instance);
    partial void UpdateNCCGIONG(NCCGIONG instance);
    partial void DeleteNCCGIONG(NCCGIONG instance);
    partial void InsertTHUCUNG(THUCUNG instance);
    partial void UpdateTHUCUNG(THUCUNG instance);
    partial void DeleteTHUCUNG(THUCUNG instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public ThuCungDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CHTCConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ThuCungDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuCungDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuCungDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ThuCungDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADONTHUCUNG> CTHOADONTHUCUNGs
		{
			get
			{
				return this.GetTable<CTHOADONTHUCUNG>();
			}
		}
		
		public System.Data.Linq.Table<GIONG> GIONGs
		{
			get
			{
				return this.GetTable<GIONG>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<LOAI> LOAIs
		{
			get
			{
				return this.GetTable<LOAI>();
			}
		}
		
		public System.Data.Linq.Table<NCCGIONG> NCCGIONGs
		{
			get
			{
				return this.GetTable<NCCGIONG>();
			}
		}
		
		public System.Data.Linq.Table<THUCUNG> THUCUNGs
		{
			get
			{
				return this.GetTable<THUCUNG>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACV;
		
		private string _MOTACV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACVChanging(string value);
    partial void OnMACVChanged();
    partial void OnMOTACVChanging(string value);
    partial void OnMOTACVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACV
		{
			get
			{
				return this._MACV;
			}
			set
			{
				if ((this._MACV != value))
				{
					this.OnMACVChanging(value);
					this.SendPropertyChanging();
					this._MACV = value;
					this.SendPropertyChanged("MACV");
					this.OnMACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTACV", DbType="NVarChar(100)")]
		public string MOTACV
		{
			get
			{
				return this._MOTACV;
			}
			set
			{
				if ((this._MOTACV != value))
				{
					this.OnMOTACVChanging(value);
					this.SendPropertyChanging();
					this._MOTACV = value;
					this.SendPropertyChanged("MOTACV");
					this.OnMOTACVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MACV", OtherKey="CHUCVU")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADONTHUCUNG")]
	public partial class CTHOADONTHUCUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private int _MATC;
		
		private System.Nullable<int> _SOLUONGMUA;
		
		private System.Nullable<int> _DONGIA;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<THUCUNG> _THUCUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMATCChanging(int value);
    partial void OnMATCChanged();
    partial void OnSOLUONGMUAChanging(System.Nullable<int> value);
    partial void OnSOLUONGMUAChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CTHOADONTHUCUNG()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._THUCUNG = default(EntityRef<THUCUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MATC
		{
			get
			{
				return this._MATC;
			}
			set
			{
				if ((this._MATC != value))
				{
					if (this._THUCUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATCChanging(value);
					this.SendPropertyChanging();
					this._MATC = value;
					this.SendPropertyChanged("MATC");
					this.OnMATCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGMUA", DbType="Int")]
		public System.Nullable<int> SOLUONGMUA
		{
			get
			{
				return this._SOLUONGMUA;
			}
			set
			{
				if ((this._SOLUONGMUA != value))
				{
					this.OnSOLUONGMUAChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGMUA = value;
					this.SendPropertyChanged("SOLUONGMUA");
					this.OnSOLUONGMUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADONTHUCUNG", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHOADONTHUCUNGs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHOADONTHUCUNGs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUCUNG_CTHOADONTHUCUNG", Storage="_THUCUNG", ThisKey="MATC", OtherKey="MATC", IsForeignKey=true)]
		public THUCUNG THUCUNG
		{
			get
			{
				return this._THUCUNG.Entity;
			}
			set
			{
				THUCUNG previousValue = this._THUCUNG.Entity;
				if (((previousValue != value) 
							|| (this._THUCUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THUCUNG.Entity = null;
						previousValue.CTHOADONTHUCUNGs.Remove(this);
					}
					this._THUCUNG.Entity = value;
					if ((value != null))
					{
						value.CTHOADONTHUCUNGs.Add(this);
						this._MATC = value.MATC;
					}
					else
					{
						this._MATC = default(int);
					}
					this.SendPropertyChanged("THUCUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GIONG")]
	public partial class GIONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAGIONG;
		
		private string _MALOAI;
		
		private string _TENGIONG;
		
		private string _MOTAG;
		
		private EntitySet<THUCUNG> _THUCUNGs;
		
		private EntityRef<LOAI> _LOAI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAGIONGChanging(string value);
    partial void OnMAGIONGChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENGIONGChanging(string value);
    partial void OnTENGIONGChanged();
    partial void OnMOTAGChanging(string value);
    partial void OnMOTAGChanged();
    #endregion
		
		public GIONG()
		{
			this._THUCUNGs = new EntitySet<THUCUNG>(new Action<THUCUNG>(this.attach_THUCUNGs), new Action<THUCUNG>(this.detach_THUCUNGs));
			this._LOAI = default(EntityRef<LOAI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAGIONG
		{
			get
			{
				return this._MAGIONG;
			}
			set
			{
				if ((this._MAGIONG != value))
				{
					this.OnMAGIONGChanging(value);
					this.SendPropertyChanging();
					this._MAGIONG = value;
					this.SendPropertyChanged("MAGIONG");
					this.OnMAGIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(5)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENGIONG", DbType="NVarChar(50)")]
		public string TENGIONG
		{
			get
			{
				return this._TENGIONG;
			}
			set
			{
				if ((this._TENGIONG != value))
				{
					this.OnTENGIONGChanging(value);
					this.SendPropertyChanging();
					this._TENGIONG = value;
					this.SendPropertyChanged("TENGIONG");
					this.OnTENGIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTAG", DbType="NVarChar(500)")]
		public string MOTAG
		{
			get
			{
				return this._MOTAG;
			}
			set
			{
				if ((this._MOTAG != value))
				{
					this.OnMOTAGChanging(value);
					this.SendPropertyChanging();
					this._MOTAG = value;
					this.SendPropertyChanged("MOTAG");
					this.OnMOTAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIONG_THUCUNG", Storage="_THUCUNGs", ThisKey="MAGIONG", OtherKey="MAGIONG")]
		public EntitySet<THUCUNG> THUCUNGs
		{
			get
			{
				return this._THUCUNGs;
			}
			set
			{
				this._THUCUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_GIONG", Storage="_LOAI", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAI LOAI
		{
			get
			{
				return this._LOAI.Entity;
			}
			set
			{
				LOAI previousValue = this._LOAI.Entity;
				if (((previousValue != value) 
							|| (this._LOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI.Entity = null;
						previousValue.GIONGs.Remove(this);
					}
					this._LOAI.Entity = value;
					if ((value != null))
					{
						value.GIONGs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUCUNGs(THUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.GIONG = this;
		}
		
		private void detach_THUCUNGs(THUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.GIONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<int> _MAKH;
		
		private string _MAKM;
		
		private EntitySet<CTHOADONTHUCUNG> _CTHOADONTHUCUNGs;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHOADONTHUCUNGs = new EntitySet<CTHOADONTHUCUNG>(new Action<CTHOADONTHUCUNG>(this.attach_CTHOADONTHUCUNGs), new Action<CTHOADONTHUCUNG>(this.detach_CTHOADONTHUCUNGs));
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="VarChar(10)")]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADONTHUCUNG", Storage="_CTHOADONTHUCUNGs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHOADONTHUCUNG> CTHOADONTHUCUNGs
		{
			get
			{
				return this._CTHOADONTHUCUNGs;
			}
			set
			{
				this._CTHOADONTHUCUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_HOADON", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONTHUCUNGs(CTHOADONTHUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHOADONTHUCUNGs(CTHOADONTHUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private System.Nullable<int> _GIATRIKM;
		
		private System.Nullable<System.DateTime> _NGAYBD;
		
		private System.Nullable<System.DateTime> _NGAYKT;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnGIATRIKMChanging(System.Nullable<int> value);
    partial void OnGIATRIKMChanged();
    partial void OnNGAYBDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBDChanged();
    partial void OnNGAYKTChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKTChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRIKM", DbType="Int")]
		public System.Nullable<int> GIATRIKM
		{
			get
			{
				return this._GIATRIKM;
			}
			set
			{
				if ((this._GIATRIKM != value))
				{
					this.OnGIATRIKMChanging(value);
					this.SendPropertyChanging();
					this._GIATRIKM = value;
					this.SendPropertyChanged("GIATRIKM");
					this.OnGIATRIKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBD", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYBD
		{
			get
			{
				return this._NGAYBD;
			}
			set
			{
				if ((this._NGAYBD != value))
				{
					this.OnNGAYBDChanging(value);
					this.SendPropertyChanging();
					this._NGAYBD = value;
					this.SendPropertyChanged("NGAYBD");
					this.OnNGAYBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKT", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYKT
		{
			get
			{
				return this._NGAYKT;
			}
			set
			{
				if ((this._NGAYKT != value))
				{
					this.OnNGAYKTChanging(value);
					this.SendPropertyChanging();
					this._NGAYKT = value;
					this.SendPropertyChanged("NGAYKT");
					this.OnNGAYKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_HOADON", Storage="_HOADONs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _HOTEN;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private string _CMND;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="NVarChar(50)")]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANV;
		
		private string _HOTEN;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private string _CHUCVU;
		
		private System.Nullable<int> _LUONG;
		
		private string _CMND;
		
		private EntityRef<CHUCVU> _CHUCVU1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(int value);
    partial void OnMANVChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnLUONGChanging(System.Nullable<int> value);
    partial void OnLUONGChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CHUCVU1 = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(5)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="VarChar(10)")]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					if (this._CHUCVU1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LUONG", DbType="Int")]
		public System.Nullable<int> LUONG
		{
			get
			{
				return this._LUONG;
			}
			set
			{
				if ((this._LUONG != value))
				{
					this.OnLUONGChanging(value);
					this.SendPropertyChanging();
					this._LUONG = value;
					this.SendPropertyChanged("LUONG");
					this.OnLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU1", ThisKey="CHUCVU", OtherKey="MACV", IsForeignKey=true)]
		public CHUCVU CHUCVU1
		{
			get
			{
				return this._CHUCVU1.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU1.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU1.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU1.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._CHUCVU = value.MACV;
					}
					else
					{
						this._CHUCVU = default(string);
					}
					this.SendPropertyChanged("CHUCVU1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI")]
	public partial class LOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<GIONG> _GIONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAI()
		{
			this._GIONGs = new EntitySet<GIONG>(new Action<GIONG>(this.attach_GIONGs), new Action<GIONG>(this.detach_GIONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(20)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_GIONG", Storage="_GIONGs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<GIONG> GIONGs
		{
			get
			{
				return this._GIONGs;
			}
			set
			{
				this._GIONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GIONGs(GIONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = this;
		}
		
		private void detach_GIONGs(GIONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCCGIONG")]
	public partial class NCCGIONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TEN;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<THUCUNG> _THUCUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public NCCGIONG()
		{
			this._THUCUNGs = new EntitySet<THUCUNG>(new Action<THUCUNG>(this.attach_THUCUNGs), new Action<THUCUNG>(this.detach_THUCUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(20)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCCGIONG_THUCUNG", Storage="_THUCUNGs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<THUCUNG> THUCUNGs
		{
			get
			{
				return this._THUCUNGs;
			}
			set
			{
				this._THUCUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUCUNGs(THUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.NCCGIONG = this;
		}
		
		private void detach_THUCUNGs(THUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.NCCGIONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUCUNG")]
	public partial class THUCUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATC;
		
		private string _MAGIONG;
		
		private System.Nullable<int> _CANNANG;
		
		private System.Nullable<int> _SLTON;
		
		private System.Nullable<int> _DONGIA;
		
		private string _MANCC;
		
		private string _ANH;
		
		private EntitySet<CTHOADONTHUCUNG> _CTHOADONTHUCUNGs;
		
		private EntityRef<GIONG> _GIONG;
		
		private EntityRef<NCCGIONG> _NCCGIONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATCChanging(int value);
    partial void OnMATCChanged();
    partial void OnMAGIONGChanging(string value);
    partial void OnMAGIONGChanged();
    partial void OnCANNANGChanging(System.Nullable<int> value);
    partial void OnCANNANGChanged();
    partial void OnSLTONChanging(System.Nullable<int> value);
    partial void OnSLTONChanged();
    partial void OnDONGIAChanging(System.Nullable<int> value);
    partial void OnDONGIAChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnANHChanging(string value);
    partial void OnANHChanged();
    #endregion
		
		public THUCUNG()
		{
			this._CTHOADONTHUCUNGs = new EntitySet<CTHOADONTHUCUNG>(new Action<CTHOADONTHUCUNG>(this.attach_CTHOADONTHUCUNGs), new Action<CTHOADONTHUCUNG>(this.detach_CTHOADONTHUCUNGs));
			this._GIONG = default(EntityRef<GIONG>);
			this._NCCGIONG = default(EntityRef<NCCGIONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATC
		{
			get
			{
				return this._MATC;
			}
			set
			{
				if ((this._MATC != value))
				{
					this.OnMATCChanging(value);
					this.SendPropertyChanging();
					this._MATC = value;
					this.SendPropertyChanged("MATC");
					this.OnMATCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAGIONG", DbType="VarChar(10)")]
		public string MAGIONG
		{
			get
			{
				return this._MAGIONG;
			}
			set
			{
				if ((this._MAGIONG != value))
				{
					if (this._GIONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAGIONGChanging(value);
					this.SendPropertyChanging();
					this._MAGIONG = value;
					this.SendPropertyChanged("MAGIONG");
					this.OnMAGIONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANNANG", DbType="Int")]
		public System.Nullable<int> CANNANG
		{
			get
			{
				return this._CANNANG;
			}
			set
			{
				if ((this._CANNANG != value))
				{
					this.OnCANNANGChanging(value);
					this.SendPropertyChanging();
					this._CANNANG = value;
					this.SendPropertyChanged("CANNANG");
					this.OnCANNANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLTON", DbType="Int")]
		public System.Nullable<int> SLTON
		{
			get
			{
				return this._SLTON;
			}
			set
			{
				if ((this._SLTON != value))
				{
					this.OnSLTONChanging(value);
					this.SendPropertyChanging();
					this._SLTON = value;
					this.SendPropertyChanged("SLTON");
					this.OnSLTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int")]
		public System.Nullable<int> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NCCGIONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH", DbType="NVarChar(50)")]
		public string ANH
		{
			get
			{
				return this._ANH;
			}
			set
			{
				if ((this._ANH != value))
				{
					this.OnANHChanging(value);
					this.SendPropertyChanging();
					this._ANH = value;
					this.SendPropertyChanged("ANH");
					this.OnANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THUCUNG_CTHOADONTHUCUNG", Storage="_CTHOADONTHUCUNGs", ThisKey="MATC", OtherKey="MATC")]
		public EntitySet<CTHOADONTHUCUNG> CTHOADONTHUCUNGs
		{
			get
			{
				return this._CTHOADONTHUCUNGs;
			}
			set
			{
				this._CTHOADONTHUCUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GIONG_THUCUNG", Storage="_GIONG", ThisKey="MAGIONG", OtherKey="MAGIONG", IsForeignKey=true)]
		public GIONG GIONG
		{
			get
			{
				return this._GIONG.Entity;
			}
			set
			{
				GIONG previousValue = this._GIONG.Entity;
				if (((previousValue != value) 
							|| (this._GIONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GIONG.Entity = null;
						previousValue.THUCUNGs.Remove(this);
					}
					this._GIONG.Entity = value;
					if ((value != null))
					{
						value.THUCUNGs.Add(this);
						this._MAGIONG = value.MAGIONG;
					}
					else
					{
						this._MAGIONG = default(string);
					}
					this.SendPropertyChanged("GIONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCCGIONG_THUCUNG", Storage="_NCCGIONG", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NCCGIONG NCCGIONG
		{
			get
			{
				return this._NCCGIONG.Entity;
			}
			set
			{
				NCCGIONG previousValue = this._NCCGIONG.Entity;
				if (((previousValue != value) 
							|| (this._NCCGIONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCCGIONG.Entity = null;
						previousValue.THUCUNGs.Remove(this);
					}
					this._NCCGIONG.Entity = value;
					if ((value != null))
					{
						value.THUCUNGs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NCCGIONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONTHUCUNGs(CTHOADONTHUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.THUCUNG = this;
		}
		
		private void detach_CTHOADONTHUCUNGs(CTHOADONTHUCUNG entity)
		{
			this.SendPropertyChanging();
			entity.THUCUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TK;
		
		private string _MK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTKChanging(string value);
    partial void OnTKChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    #endregion
		
		public TAIKHOAN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TK", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TK
		{
			get
			{
				return this._TK;
			}
			set
			{
				if ((this._TK != value))
				{
					this.OnTKChanging(value);
					this.SendPropertyChanging();
					this._TK = value;
					this.SendPropertyChanged("TK");
					this.OnTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
